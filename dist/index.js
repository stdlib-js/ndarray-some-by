"use strict";var p=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var V=p(function(Rr,z){z.exports={dims:null,keepdims:!1}});var F=p(function(Ur,A){"use strict";var C=require("@stdlib/assert-is-plain-object"),O=require("@stdlib/assert-has-own-property"),N=require("@stdlib/assert-is-boolean").isPrimitive,Y=require("@stdlib/assert-is-integer-array").primitives,G=require("@stdlib/assert-is-empty-collection"),H=require("@stdlib/ndarray-base-to-unique-normalized-indices"),j=require("@stdlib/array-base-join"),w=require("@stdlib/string-format");function J(r,e,a){var i;if(!C(a))return new TypeError(w("invalid argument. Options argument must be an object. Value: `%s`.",a));if(O(a,"keepdims")&&(r.keepdims=a.keepdims,!N(r.keepdims)))return new TypeError(w("invalid option. `%s` option must be a boolean. Option: `%s`.","keepdims",r.keepdims));if(O(a,"dims")){if(r.dims=a.dims,!Y(r.dims)&&!G(r.dims))return new TypeError(w("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(i=H(r.dims,e-1),i===null)return new RangeError(w("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",j(r.dims,",")));if(i.length!==r.dims.length)return new Error(w("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",j(r.dims,",")));r.dims=i}return null}A.exports=J});var P=p(function(_r,L){"use strict";var T=require("@stdlib/assert-is-function"),K=require("@stdlib/assert-is-integer").isPrimitive,B=require("@stdlib/assert-is-ndarray-like"),M=require("@stdlib/ndarray-base-assert-is-integer-data-type"),Q=require("@stdlib/ndarray-base-unary-reduce-subarray-by"),W=require("@stdlib/ndarray-base-some-by"),X=require("@stdlib/ndarray-base-spread-dimensions"),Z=require("@stdlib/array-base-indices-complement"),$=require("@stdlib/ndarray-dtype"),rr=require("@stdlib/ndarray-shape"),I=require("@stdlib/ndarray-base-order"),er=require("@stdlib/ndarray-base-data-buffer"),ar=require("@stdlib/ndarray-base-strides"),ir=require("@stdlib/ndarray-base-offset"),tr=require("@stdlib/ndarray-defaults"),nr=require("@stdlib/ndarray-empty"),ur=require("@stdlib/ndarray-base-ctor"),sr=require("@stdlib/ndarray-base-maybe-broadcast-array"),vr=require("@stdlib/ndarray-base-broadcast-scalar"),mr=require("@stdlib/strided-base-reinterpret-boolean"),dr=require("@stdlib/array-base-take-indexed"),or=require("@stdlib/array-base-zero-to"),lr=require("@stdlib/object-assign"),h=require("@stdlib/string-format"),gr=V(),fr=F(),qr=tr.get("dtypes.integer_index");function cr(r,e,a,i,m){var b,n,s,d,c,o,l,t,g,f,u,y,k,v,S;if(b=arguments.length,!B(r))throw new TypeError(h("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(b<4){if(!T(a))throw new TypeError(h("invalid argument. Third argument must be a function. Value: `%s`.",a));u=a}else if(b>4){if(f=!0,S=a,u=i,!T(u))throw new TypeError(h("invalid argument. Fourth argument must be a function. Value: `%s`.",u));d=m}else if(T(a))u=a,d=i;else if(T(i))f=!0,S=a,u=i;else throw new TypeError(h("invalid argument. Fourth argument must be a function. Value: `%s`.",i));if(l=rr(r),y=l.length,n=lr({},gr),f&&(c=fr(n,y,S),c))throw c;if(n.dims===null&&(n.dims=or(y)),o=Z(y,n.dims),t=dr(l,o),g=I(r),B(e)){if(!M($(e)))throw new TypeError(h("invalid argument. Second argument must have an integer data type. Value: `%s`.",e));try{k=sr(e,t)}catch(Pr){throw new Error("invalid argument. Second argument must be broadcast-compatible with the non-reduced dimensions of the input array.")}}else{if(!K(e))throw new TypeError(h("invalid argument. Second argument must be an integer or an ndarray-like object. Value: `%s`.",e));k=vr(e,qr,t,g)}return v=nr(t,{dtype:"bool",order:g}),s=new ur("uint8",mr(er(v),0),t,ar(v,!1),ir(v),I(v)),Q(W,[r,s,k],n.dims,u,d),n.keepdims&&(v=X(y,v,o)),v}L.exports=cr});var U=p(function(zr,R){"use strict";var E=require("@stdlib/assert-is-function"),yr=require("@stdlib/assert-is-integer").isPrimitive,hr=require("@stdlib/ndarray-base-assert-is-integer-data-type"),D=require("@stdlib/assert-is-ndarray-like"),br=require("@stdlib/ndarray-base-unary-reduce-subarray-by"),wr=require("@stdlib/ndarray-ndims"),pr=require("@stdlib/ndarray-base-some-by"),Tr=require("@stdlib/ndarray-dtype"),x=require("@stdlib/ndarray-shape"),Er=require("@stdlib/ndarray-base-order"),kr=require("@stdlib/ndarray-defaults"),Sr=require("@stdlib/ndarray-base-maybe-broadcast-array"),Vr=require("@stdlib/ndarray-base-broadcast-scalar"),Fr=require("@stdlib/object-assign"),Dr=require("@stdlib/array-base-zero-to"),q=require("@stdlib/string-format"),Or=V(),jr=F(),Ar=kr.get("dtypes.integer_index");function Br(r,e,a,i,m,b){var n,s,d,c,o,l,t,g,f,u;if(n=arguments.length,!D(r))throw new TypeError(q("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(!D(a))throw new TypeError(q("invalid argument. Third argument must be an ndarray-like object. Value: `%s`.",a));if(n<5){if(t=i,!E(t))throw new TypeError(q("invalid argument. Fourth argument must be a function. Value: `%s`.",t))}else if(n>5){if(o=!0,u=i,t=m,!E(t))throw new TypeError(q("invalid argument. Fifth argument must be a function. Value: `%s`.",t));l=b}else if(E(i))t=i,l=m;else if(E(m))o=!0,u=i,t=m;else throw new TypeError(q("invalid argument. Fifth argument must be a function. Value: `%s`.",m));if(g=wr(r),s=Fr({},Or),o&&(d=jr(s,g,u),d))throw d;if(s.dims===null&&(s.dims=Dr(g)),c=Er(r),D(e)){if(!hr(Tr(e)))throw new TypeError(q("invalid argument. Second argument must have an integer data type. Value: `%s`.",e));try{f=Sr(e,x(a))}catch(y){throw new Error("invalid argument. Second argument must be broadcast-compatible with the non-reduced dimensions of the input array.")}}else{if(!yr(e))throw new TypeError(q("invalid argument. Second argument must be an integer or an ndarray-like object. Value: `%s`.",e));f=Vr(e,Ar,x(a),c)}return br(pr,[r,a,f],s.dims,t,l),a}R.exports=Br});var Ir=require("@stdlib/utils-define-nonenumerable-read-only-property"),_=P(),Lr=U();Ir(_,"assign",Lr);module.exports=_;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
